üìÅ Folder: terraform/
cpp
Copy
Edit
terraform/
‚îú‚îÄ‚îÄ provider.tf
‚îú‚îÄ‚îÄ main.tf
‚îú‚îÄ‚îÄ variables.tf
‚îú‚îÄ‚îÄ outputs.tf
‚îî‚îÄ‚îÄ terraform.tfvars (optional, gitignored)
‚úÖ provider.tf
hcl
Copy
Edit
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }

  required_version = ">= 1.3.0"
}

provider "aws" {
  region = var.aws_region
}
‚úÖ variables.tf
hcl
Copy
Edit
variable "aws_region" {
  description = "AWS region to deploy in"
  type        = string
}

variable "bucket_name" {
  description = "S3 bucket name for hosting the resume"
  type        = string
}
‚úÖ main.tf
hcl
Copy
Edit
resource "aws_s3_bucket" "resume" {
  bucket = var.bucket_name
  acl    = "public-read"

  website {
    index_document = "index.html"
    error_document = "index.html"
  }

  tags = {
    Name = "CloudResumeBucket"
    Project = "Cloud Resume Challenge Lite"
  }
}

resource "aws_s3_bucket_policy" "public_access" {
  bucket = aws_s3_bucket.resume.id

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Sid       = "PublicReadGetObject",
        Effect    = "Allow",
        Principal = "*",
        Action    = "s3:GetObject",
        Resource  = "${aws_s3_bucket.resume.arn}/*"
      }
    ]
  })
}
‚úÖ outputs.tf
hcl
Copy
Edit
output "s3_website_url" {
  description = "The URL of the static resume site"
  value       = aws_s3_bucket.resume.website_endpoint
}
‚úÖ terraform.tfvars (Optional, not committed to Git)
hcl
Copy
Edit
aws_region  = "us-east-1"
bucket_name = "tommy-cloud-resume-lite"
‚ö†Ô∏è S3 bucket names must be globally unique.

‚úÖ Deploy Instructions
bash
Copy
Edit
cd terraform
terraform init
terraform plan
terraform apply
Then push your site files with:

bash
Copy
Edit
aws s3 sync ../website s3://tommy-cloud-resume-lite --delete
üí° Optional Upgrades
Feature	Description
CloudFront	Add a global CDN and custom domain
Route53	Point resume.yourdomain.com to your S3 site
CI/CD	Deploy automatically via GitHub Actions
HTTPS w/ CertMgr	Add HTTPS using CloudFront + ACM
